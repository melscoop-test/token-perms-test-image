on: workflow_dispatch

name: release 3

jobs:
  test-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.3.0

      - name: Compute tags
        id: tags
        run: |
          DOCKER_IMAGE=melscoop-test/token-perms-test-1246460/test-image
          VERSION=main
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          # mark the latest on release
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS\n${DOCKER_IMAGE}:latest"
          fi
          echo "::set-output name=tags::${TAGS}"

#      - name: Login to GitHub Packages
#        uses: docker/login-action@v1
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a Dockerfile
        run: |
          echo 'FROM alpine' > Dockerfile
          echo 'ENTRYPOINT ["echo", "Hello from ${{ github.repository }}!"]' >> Dockerfile

      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          tags: ${{ steps.tags.outputs.tags }}
          file: Dockerfile.build
#         push: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') }}
          

      - name: Login to ghcr.io
        run: docker login https://ghcr.io -u token --password-stdin <<< ${{ github.token }}
        
      - name: push image
        uses: docker/build-push-action@v2
        with:
           tags: ${{ steps.tags.outputs.tags }}
#          file: Dockerfile.build
           push: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') }}
        
